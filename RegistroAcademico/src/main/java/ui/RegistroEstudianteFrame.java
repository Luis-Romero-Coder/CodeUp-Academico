/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import com.codeup.registroacademico.domain.Estudiante;
import Service.RegistroEstudiantesService;
import javax.swing.JOptionPane;
import Service.CalculoService;
import javax.swing.JFileChooser;
import java.io.File;
import Service.ArchivoService;


/**
 *
 * @author Coder
 */


public class RegistroEstudianteFrame extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(RegistroEstudianteFrame.class.getName());
    private final RegistroEstudiantesService registroService = new Service.RegistroEstudiantesService();
    private final CalculoService calculoService = new CalculoService();
    private final ArchivoService archivoService = new ArchivoService();

    /**
     * Creates new form RegistroEstudianteFrame
     */
    public RegistroEstudianteFrame() {
        initComponents();
        actualizarTabla();
        lblPromedio.setText("");
        lblNotaMaxima.setText("");
        lblEstado.setText("");
    }
    private void actualizarTabla(){
        String [] columnas = {"ID", "Nombre", "Edad", "Nota 1", "Nota 2", "Nota 3"};
        var lista = registroService.listarEstudiantes();
        Object[][] datos = new Object[lista.size()][6];
        
        int i = 0;
        for (var e : lista){
            datos[i][0] = e.getId();
            datos[i][1] = e.getNombre();
            datos[i][2] = e.getEdad();
            datos[i][3] = e.getNota1();
            datos[i][4] = e.getNota2();
            datos[i][5] = e.getNota3();
            i++;
        }
        jTable1.setModel(new javax.swing.table.DefaultTableModel(datos, columnas));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNombre = new javax.swing.JTextField();
        txtNota1 = new javax.swing.JTextField();
        txtNota2 = new javax.swing.JTextField();
        txtNota3 = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEstadistica = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        lblEdad = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        spnEdad = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblPromedio = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblNotaMaxima = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        btnGuardarCSV = new javax.swing.JButton();
        btnCargarCSV = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEstadistica.setText("Estadistica");
        btnEstadistica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadisticaActionPerformed(evt);
            }
        });

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombre");

        lblEdad.setText("Edad");

        jLabel3.setText("Nota 1");

        jLabel4.setText("Nota 2");

        jLabel5.setText("Nota 3");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel1.setText("Promedio");

        lblPromedio.setText("jLabel2");

        jLabel2.setText("Nota Maxima");

        lblNotaMaxima.setText("jLabel6");

        jLabel6.setText("Estado");

        lblEstado.setText("jLabel7");

        btnGuardarCSV.setText("Guardar CSV");
        btnGuardarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCSVActionPerformed(evt);
            }
        });

        btnCargarCSV.setText("Cargar CSV");
        btnCargarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(lblEdad)
                        .addComponent(lblNombre)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNota3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                            .addComponent(txtNota1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNota2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addComponent(spnEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEstadistica)
                        .addGap(7, 7, 7)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(lblPromedio)
                            .addComponent(jLabel2)
                            .addComponent(lblNotaMaxima)
                            .addComponent(jLabel6)
                            .addComponent(lblEstado))
                        .addGap(65, 65, 65))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCalcular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnGuardarCSV)
                        .addGap(18, 18, 18)
                        .addComponent(btnCargarCSV)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEdad)
                            .addComponent(jLabel1))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPromedio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNota1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNotaMaxima))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNota2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEstado))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNota3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar)
                            .addComponent(btnEstadistica)
                            .addComponent(btnCalcular)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardarCSV)
                            .addComponent(btnCargarCSV))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try{
            String id = String.valueOf(registroService.listarEstudiantes().size() + 1);
            String nombre = txtNombre.getText().trim();
            int edad = (int) spnEdad.getValue();
            
            if(nombre.isEmpty()){
                JOptionPane.showMessageDialog(this, "El nombre no puede estar vacio");
                return;
            }
            double nota1 = Double.parseDouble(txtNota1.getText().trim());
            double nota2 = Double.parseDouble(txtNota2.getText().trim());
            double nota3 = Double.parseDouble(txtNota3.getText().trim());
            
            if (nota1 < 0 || nota1 > 5 || nota2 < 0 || nota2 > 5 || nota3 < 0 || nota3 > 5) {
                JOptionPane.showMessageDialog(this, "Las notas no pueden ser menos a 0.0 ni mayor a 5.0");
                return;
            }
            
            var estudiante = new Estudiante(id, nombre, edad, nota1, nota2, nota3);
            registroService.agregarEstudiantes(estudiante);
            
            actualizarTabla();
            
            txtNombre.setText("");
            spnEdad.setValue(0);
            txtNota1.setText("");
            txtNota2.setText("");
            txtNota3.setText("");
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this,"Las notas deben ser valores numericos");
        }
// TODO add your handling code here:
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEstadisticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadisticaActionPerformed
        if(registroService.listarEstudiantes().isEmpty()){
            JOptionPane.showMessageDialog(this, "No hay estudiantes registrados");
            return;
        }
        
        double promedioGeneral = registroService.promedioGeneral();
        var mejor = registroService.mejorEstudiante();
        long aprobados = registroService.contarAprobados();
        long reprobados = registroService.contarReprobados();
        
        StringBuilder sb = new StringBuilder();
        sb.append("Estadisticas grupales: \n");
        sb.append("Promedio General:").append(promedioGeneral).append("\n");
        if (mejor.isPresent()){
            sb.append("Mejor estudiante:").append(mejor.get().getNombre())
                    .append("Promedio:").append(registroService.calcularPromedio(mejor.get())).append("\n");
        }
        sb.append("Aprobados:").append(aprobados).append("\n");
        sb.append("Reprobados:").append(reprobados).append("\n");
        
        JOptionPane.showMessageDialog(this, sb.toString(), "Estadisticas", JOptionPane.INFORMATION_MESSAGE);
// TODO add your handling code here:
    }//GEN-LAST:event_btnEstadisticaActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        try{
            String nombre = txtNombre.getText().trim();
            int edad = (int) spnEdad.getValue();
            if(nombre.isEmpty()){
                JOptionPane.showMessageDialog(this, "El nombre no puede estar vacio");
                return;
            }
            
            double nota1 = Double.parseDouble(txtNota1.getText().trim());
            double nota2 = Double.parseDouble(txtNota2.getText().trim());
            double nota3 = Double.parseDouble(txtNota3.getText().trim());
            
            if (nota1 < 0 || nota1 > 5 || nota2 < 0 || nota2 > 5 || nota3 < 0 || nota3 > 5){
                JOptionPane.showMessageDialog(this, "Las notas deben estar entre 0 y 5");
                return;
            }
            
            Estudiante temp = new Estudiante("0", nombre, edad, nota1, nota2, nota3);
            
            double promedio = calculoService.promedio(temp);
            double notaMax = calculoService.notaMaxima(temp);
            boolean aprobado = calculoService.aprobado(promedio);
            
            lblPromedio.setText("" + promedio);
            lblNotaMaxima.setText("" + notaMax);
            lblEstado.setText("" + (aprobado ? "Aprobado" : "Reprobado"));
        } catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Las notas deben ser valores numericos");
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnGuardarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCSVActionPerformed
        if(registroService.listarEstudiantes().isEmpty()){
            JOptionPane.showMessageDialog(this, "No hay estudiantes que guardar");
            return;
        }
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION){
            File archivo = fileChooser.getSelectedFile();
            try{
                archivoService.guardarCSV(archivo, registroService.listarEstudiantes());
                JOptionPane.showMessageDialog(this, "Archivo guardado");
            } catch (Exception ex){
                JOptionPane.showMessageDialog(this, "Error al guardar" + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardarCSVActionPerformed

    private void btnCargarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarCSVActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION){
            File archivo = fileChooser.getSelectedFile();
            try{
                var lista = archivoService.cargarCSV(archivo);
                registroService.listarEstudiantes().clear();
                for (var e : lista){
                    registroService.agregarEstudiantes(e);
                }
                actualizarTabla();
                JOptionPane.showMessageDialog(this, "Datos cargados correctamente");
            } catch (Exception ex){
                JOptionPane.showMessageDialog(this, "Error al cargar el archivo:" + ex.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCargarCSVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new RegistroEstudianteFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnCargarCSV;
    private javax.swing.JButton btnEstadistica;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarCSV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNotaMaxima;
    private javax.swing.JLabel lblPromedio;
    private javax.swing.JSpinner spnEdad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNota1;
    private javax.swing.JTextField txtNota2;
    private javax.swing.JTextField txtNota3;
    // End of variables declaration//GEN-END:variables
}
